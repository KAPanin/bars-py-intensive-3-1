class Coffee:
    def __init__(self, **kwargs):
        self.__dict__.update(kwargs)

    @classmethod
    def init_cappuccino(cls):
        """
        Метод-конструктор возвращающий обьект Coffee с атрибутами (ингредиентами) капучино, значения
        которых это процентное соотношение этого ингредиента в кофе. Порядок атрибута (слева направо)
        означает порядок добавления ингредиента при приготовлении

        кофе - 33 %
        горячее молока - 33 %
        взбитая молочная пена - 33 %
        """
        coffee = cls(coffee=1/3, hot_milk=1/3, whipped_milk_foam=1/3)
        return coffee

    @classmethod
    def init_latte(cls):
        """
        Метод-конструктор возвращающий обьект Coffee с атрибутами (ингредиентами) латте, значения
        которых это процентное соотношение этого ингредиента в кофе. Порядок атрибута (слева направо)
        означает порядок добавления ингредиента при приготовлении

        кофе - 25 %
        горячее молока - 50 %
        взбитая молочная пена - 25 %
        """
        coffee = cls(coffee=1/4, hot_milk=2/4, whipped_milk_foam=1/4)
        return coffee

    @classmethod
    def init_glace(cls):
        """
        Метод-конструктор возвращающий обьект Coffee с атрибутами (ингредиентами) глясе, значения
        которых это процентное соотношение этого ингредиента в кофе. Порядок атрибута (слева направо)
        означает порядок добавления ингредиента при приготовлении

        кофе - 50 %
        мороженое - 25 %
        тертый шоколад - 25 %
        """
        coffee = cls(coffe=1/2, icescream=1/4, grated_chocolate=1/4)
        return coffee
